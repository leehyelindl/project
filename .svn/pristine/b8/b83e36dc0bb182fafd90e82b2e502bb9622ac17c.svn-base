package kr.or.ddit.controller.owner;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.service.owner.IFrcsIdService;
import kr.or.ddit.service.owner.IFrcsInquiryService;
import kr.or.ddit.vo.owner.FrcsInquiryVO;
import kr.or.ddit.vo.owner.FrcsOwnershipVO;

@Controller
@RequestMapping("/owner")
public class OwnerInquiryController {

	@Inject
	private IFrcsInquiryService service;
	
	@Inject
	private IFrcsIdService idService;
	
	@PreAuthorize("hasRole('ROLE_OWNER')")
	@RequestMapping(value="/inquiry.do", method = RequestMethod.GET )
	public String ownerInquiryList(Model model) {
		String frcsId = idService.getFrcsId();
		List<FrcsInquiryVO> frcsInqList = service.frcsInqList(frcsId);
		model.addAttribute("inqList", frcsInqList);
		return "owner/board/inquiryList";
	}
	
	@RequestMapping(value = "/inqDetail.do", method = RequestMethod.GET)
	public String ownerInquiryDetail() {
		return "owner/board/inquiryDetail";
	}
	
	@RequestMapping(value = "/inqForm.do", method = RequestMethod.GET)
	public String ownerInquiryForm() {
		return "owner/board/inquiryForm";
	}
	
	@RequestMapping(value = "/inqInsert.do", method = RequestMethod.POST)
	public String ownerInquiryInsert(
			HttpServletRequest req,
			RedirectAttributes ra,
			@RequestParam("inqryTtl") String inqryTtl,
			@RequestParam("inqryCn") String inqryCn,
			FrcsInquiryVO FrcsInqVO, Model model 
			) {
		String goPage = "";
		
		String frcsId = idService.getFrcsId();
		FrcsInqVO.setFrcsId(frcsId); //로그인한 사용자 설정
		FrcsInqVO.setInqryTtl(inqryTtl);
		FrcsInqVO.setInqryCn(inqryCn);
		ServiceResult result = service.inqInsert(req,FrcsInqVO);
		if(result.equals(ServiceResult.OK)) {
			ra.addFlashAttribute("message", "문의글 등록 완료!");
			goPage = "redirect:/owner/inqDetail.do?inqryNo=" + FrcsInqVO.getInqryNo();
		}else {
			model.addAttribute("message", "서버에러, 다시 시도해주세요.");
			goPage = "board/inquiryForm";
		}
		
		return goPage;
	}
}
