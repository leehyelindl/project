package kr.or.ddit.controller.owner;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.service.head.IMenuService;
import kr.or.ddit.service.owner.IFrcsIdService;
import kr.or.ddit.service.owner.IFrcsMenuService;
import kr.or.ddit.vo.AttachVO;
import kr.or.ddit.vo.head.MenuVO;
import kr.or.ddit.vo.owner.FrcsMenuVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/owner")
public class OwnerMenuController {

	@Inject
	private IFrcsMenuService service;
	
	@Inject
	private IFrcsIdService idService;
	
	@PreAuthorize("hasRole('ROLE_OWNER')")
	@RequestMapping(value="/menu.do", method = RequestMethod.GET )
	public String ownerMenuList(Model model) {
		
		String frcsId = idService.getFrcsId();
		List<FrcsMenuVO> frcsMenuList = service.frcsMenuList(frcsId);
		model.addAttribute("list", frcsMenuList);
		log.info("메뉴 : " + frcsMenuList.get(0).toString());
		
//		List<FrcsMenuVO> frcsMenu = service.selectMenuImg(frcsId);
//		FrcsMenuVO frcsMenuVO = service.selectMenuImg(frcsId);
//		model.addAttribute("frcsMenuVO", frcsMenuVO);
//		log.info("가맹메뉴 : " + frcsMenuVO);
		
		return "owner/info/menuList";
	}
	
//	본사메뉴를 가져와 저장하는 기능도 만들어야 할듯! 본사 메뉴코드만 가져와서 frcsId와 saleYn을 넣어 저장(업데이트)...모달로해야하나..?
//	@RequestMapping(value="/menu.do", method = RequestMethod.POST )
//	public String ownerHeadMenuList(List<MenuVO> headMenuList, Model model) {
//		
//		for(MenuVO menuVO : headMenuList) {
//			
//			log.info("MenuCd : " + menuVO.getMenuCd());
//			log.info("FrcsId : " + idService.getFrcsId());
//			
//			FrcsMenuVO frcsMenu = new FrcsMenuVO();
//			frcsMenu.setMenuCd(menuVO.getMenuCd());
//			frcsMenu.setFrcsId(idService.getFrcsId());
//			frcsMenu.setSaleYn("Y");
//			
//			service.headMenuUpdate(frcsMenu);
//		}
//		
//		return "owner/info/menuList";
//	}
	
	@ResponseBody
	@RequestMapping(value = "/menuUpdate.do", method = RequestMethod.POST)
	public ResponseEntity<List<FrcsMenuVO>> ownerMenuUpdate(
			@RequestBody List<FrcsMenuVO> frcsMenuList) {
		
		for(FrcsMenuVO menuVO : frcsMenuList) {
			log.info("menuCd : " + menuVO.getMenuCd());
			log.info("frcsId : " + idService.getFrcsId());
			log.info("saleYn : " + menuVO.getSaleYn());
			
			String menuCd = menuVO.getMenuCd();
			String frcsId = idService.getFrcsId();
			String saleYn = menuVO.getSaleYn();
			
			FrcsMenuVO menu = new FrcsMenuVO();
			menu.setMenuCd(menuCd);
			menu.setFrcsId(frcsId);
			menu.setSaleYn(saleYn);
			
			service.menuUpdate(menu);
		}
		
		return new ResponseEntity<List<FrcsMenuVO>>(HttpStatus.OK);
	}
	
}
