<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:websocket="http://www.springframework.org/schema/websocket"	
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.or.ddit" />
<!-- 		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
<!-- 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/> -->
<!-- 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/> -->
<!-- 	</context:component-scan> -->
	
	<!-- Tiles 설정 시작 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<!-- order는 실행 우선 순위 -->
		<beans:property name="order" value="1"/>
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>	
	</beans:bean>
	<!-- Tiles 설정 끝 -->
	
	<!-- navermail설정 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.naver.com"/> <!-- 메이서버 호스트 -->
		<beans:property name="port" value="465"/> <!-- 메이서버 포트번호 -->
		<beans:property name="username" value="qweiop1541"/> <!-- 자신의 이메일 아이디 -->
		<beans:property name="password" value="Elion1@3$"/> <!-- 자신의 비밀번호 -->
		<!-- 보안연결 SSL과 관련된 설정 -->
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.ssl.enable">true</beans:prop>
<!-- 				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop> -->
<!-- 				<beans:prop key="mail.smtps.ssl.checkserveridentity">true</beans:prop> -->
<!-- 				<beans:prop key="mail.smtp.auth">true</beans:prop> -->
<!-- 				<beans:prop key="mail.smtps.ssl.trust">*</beans:prop> -->
<!-- 				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop> -->
			</beans:props>
		</beans:property>
	</beans:bean>
	
<!-- 	<beans:bean id="accessLoggingInterceptor" class="kr.or.ddit.controller.intercept.AccessLoggingInterceptor"></beans:bean> -->
	
<!-- 	<interceptors> -->
<!-- 		<interceptor> -->
<!-- 			<mapping path="/**"/> -->
<!-- 			<exclude-mapping path="/resources/**"/> -->
<!-- 			<beans:ref bean="accessLoggingInterceptor"/> -->
<!-- 		</interceptor> -->
<!-- 	</interceptors> -->
	<!-- 인터셉터 설정 끝 -->
	
	<!--
		서블릿 표준용  multipartResolver를 스프링 빈으로 정의
		- StandardServletMultipartResolver 사용 시 설정
			> Servlet 3.0의 Part를 이용한 MultipartFile 데이터 처리 
	 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
	
	<!--  web소켓 핸들러  -->
	<beans:bean id="boardInsertHandler" class="kr.or.ddit.controller.socket.SocketTest"/>
	<websocket:handlers>
		<websocket:mapping handler="boardInsertHandler" path="/handler"/>
		<websocket:handshake-interceptors>
		<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
		
	
</beans:beans>
