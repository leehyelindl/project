package kr.or.ddit.controller.owner;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.service.owner.IFrcsDailySaleService;
import kr.or.ddit.service.owner.IFrcsIdService;
import kr.or.ddit.vo.owner.FrcsDailySalesVO;
import kr.or.ddit.vo.owner.FrcsMenuVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/owner")
public class OwnerPurchaseSalesController {

	@Inject
	private IFrcsDailySaleService service;
	
	@Inject
	private IFrcsIdService commService;
	
	@PreAuthorize("hasRole('ROLE_OWNER')")
	@RequestMapping(value="/dailySales.do", method = RequestMethod.GET)
	public String dailySales(@RequestParam("date")String dateString, Model model) throws Exception {
		
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date date = sdf.parse(dateString);
        
        String frcsId = commService.getFrcsId();
        
        // 일일 매출 조회
        List<FrcsDailySalesVO> dailySaleList = service.getDailySalesList(frcsId);
        
        // 가맹점 메뉴 정보
        List<FrcsMenuVO> frcsMenuList = service.getMenu(frcsId);
        
        log.info("date: " + date);
        
        model.addAttribute("date",date);	// 오늘 날짜
        model.addAttribute("frcsMenuList", frcsMenuList);	// 가맹점 메뉴정보
        

        return "owner/purchaseSales/dailySales";
    }
	
	@ResponseBody
	@RequestMapping(value="/dailySalesInsert.do", method = RequestMethod.POST)
	public ResponseEntity<ServiceResult> insertDailySales(@RequestBody List<FrcsDailySalesVO> salesList){
		
		
		log.info("FrcsDailySalesVO : " + salesList);
		
		ServiceResult result = service.insertDailySales(salesList);
		
		return new ResponseEntity<ServiceResult>(result,HttpStatus.OK);
	}
}
