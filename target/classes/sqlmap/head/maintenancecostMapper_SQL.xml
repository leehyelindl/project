<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.head.MaintenancecostMapper">

	<!-- 관리비관리 메인화면 totalRecord -->
	<select id="selectMainCount" parameterType="headPagingVO" resultType="int">
		SELECT COUNT(FRCS_ID) AS CNT
		FROM(
		SELECT A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, B.FRCS_ID, B.FEE_STATUS, SUM(B.FEE_TOTALPAY) AS FEE_TOTALPAY
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, B.FRCS_ID, B.FRCS_NAME
		FROM
		(
		SELECT M.MEM_ID, M.MEM_NAME, M.MEM_TEL, M.MEM_EMAIL, FO.FRCS_ID
		FROM MEMBER M, FRCS_OWNERSHIP FO
		WHERE M.MEM_ID = FO.MEM_ID
		)A , FRANCHISE B
		WHERE A.FRCS_ID = B.FRCS_ID
		) A LEFT OUTER JOIN FEE B ON A.FRCS_ID = B.FRCS_ID
		WHERE B.FEE_STATUS = 'X'
		GROUP BY A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, B.FRCS_ID, B.FEE_STATUS
		)
	</select>
	<!-- 관리비관리 메인화면 리스트 -->
	<select id="selectMainList" parameterType="headPagingVO" resultType="headfeeVO">
		SELECT 
		B.*
		FROM (
		SELECT 
		A.*, ROW_NUMBER() OVER (ORDER BY FEE_TOTALPAY) RNUM
		FROM(	
		SELECT A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, A.FRCS_NAME, B.FRCS_ID, B.FEE_STATUS, SUM(B.FEE_TOTALPAY) AS FEE_TOTALPAY
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, B.FRCS_ID, B.FRCS_NAME
		FROM
		(
		SELECT M.MEM_ID, M.MEM_NAME, M.MEM_TEL, M.MEM_EMAIL, FO.FRCS_ID
		FROM MEMBER M, FRCS_OWNERSHIP FO
		WHERE M.MEM_ID = FO.MEM_ID
		)A , FRANCHISE B
		WHERE A.FRCS_ID = B.FRCS_ID
		) A LEFT OUTER JOIN FEE B ON A.FRCS_ID = B.FRCS_ID
		WHERE B.FEE_STATUS = 'X'
		GROUP BY A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, A.FRCS_NAME, B.FRCS_ID, B.FEE_STATUS
			) A
		)B
		<![CDATA[	
			WHERE B.RNUM >= #{startRow} AND B.RNUM <= #{endRow}
		]]>
	</select>
	<!-- 관리비관리 메인화면 미납횟수 count -->
	<select id="selectNonPaymentCount" parameterType="string" resultType="headfeeVO">
		SELECT COUNT(FEE_TOTALPAY) AS NONPAYMENT_COUNT
		FROM(
		SELECT A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, B.*
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, B.FRCS_ID, B.FRCS_NAME
		FROM
		(
		SELECT M.MEM_ID, M.MEM_NAME, M.MEM_TEL, M.MEM_EMAIL, FO.FRCS_ID
		FROM MEMBER M, FRCS_OWNERSHIP FO
		WHERE M.MEM_ID = FO.MEM_ID
		)A , FRANCHISE B
		WHERE A.FRCS_ID = B.FRCS_ID
		) A LEFT OUTER JOIN FEE B ON A.FRCS_ID = B.FRCS_ID
		WHERE B.FEE_STATUS = 'X'
		AND B.FRCS_ID = #{frcsId}
		)
	</select>
	<!-- 관리비관리 상세화면 totalRecord -->
	<select id="selectDetailCount" parameterType="headPagingVO" resultType="int">
		SELECT COUNT(FEE_CODE) AS CNT
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, A.FEE_CODE, A.FRCS_ID, A.FEE_DDAY, 
				A.FEE_TOTALPAY, A.FEE_STATUS, A.FEE_CHARGEDATE, A.FEE_PAYDATE,
		        B.FRCS_AMT, B.FRCS_ROWAL
		FROM(
		SELECT A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, B.*
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, B.FRCS_ID, B.FRCS_NAME
		FROM
		(
		SELECT M.MEM_ID, M.MEM_NAME, M.MEM_TEL, M.MEM_EMAIL, FO.FRCS_ID
		FROM MEMBER M, FRCS_OWNERSHIP FO
		WHERE M.MEM_ID = FO.MEM_ID
		)A , FRANCHISE B
		WHERE A.FRCS_ID = B.FRCS_ID
		) A LEFT OUTER JOIN FEE B ON A.FRCS_ID = B.FRCS_ID
		WHERE B.FEE_STATUS = 'X'
		AND B.FRCS_ID = #{frcsId}
		)A LEFT OUTER JOIN FRCSBILL B ON A.FRCS_ID = B.FRCS_ID
		AND A.FEE_CODE = B.FEE_CODE
		GROUP BY A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, A.FEE_CODE, A.FRCS_ID, A.FEE_DDAY, A.FEE_TOTALPAY, A.FEE_STATUS, A.FEE_CHARGEDATE, A.FEE_PAYDATE,
		        B.FRCS_AMT, B.FRCS_ROWAL
		)
	</select>
	<!-- 관리비관리 상세화면 리스트 -->
	<select id="selectDetailList" parameterType="headPagingVO" resultType="headfeeVO">
		SELECT 
		B.*
		FROM (
		SELECT 
		A.*, ROW_NUMBER() OVER (ORDER BY FEE_TOTALPAY) RNUM
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, A.FEE_CODE, A.FRCS_ID,
			   A.FEE_DDAY, A.FEE_TOTALPAY, A.FEE_STATUS, A.FEE_CHARGEDATE, A.FEE_PAYDATE,
        	   A.FRCS_NAME, B.FRCS_AMT, B.FRCS_ROWAL,B.FRCS_NONPAYDATE,B.SETTLE_DATE, B.SETTLE_AT, 
        	   B.FRCSBILL_OVERDUE, B.ORDER_AMT,B.TRAD_ADD , B.TRAD_REDCT
		FROM(
		SELECT A.MEM_ID,A.MEM_NAME,A.MEM_TEL,A.MEM_EMAIL, A.FRCS_NAME, B.*
		FROM(
		SELECT A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, B.FRCS_ID, B.FRCS_NAME
		FROM
		(
		SELECT M.MEM_ID, M.MEM_NAME, M.MEM_TEL, M.MEM_EMAIL, FO.FRCS_ID
		FROM MEMBER M, FRCS_OWNERSHIP FO
		WHERE M.MEM_ID = FO.MEM_ID
		)A , FRANCHISE B
		WHERE A.FRCS_ID = B.FRCS_ID
		) A LEFT OUTER JOIN FEE B ON A.FRCS_ID = B.FRCS_ID
		WHERE B.FEE_STATUS = 'X'
		AND B.FRCS_ID = #{frcsId}
		)A LEFT OUTER JOIN FRCSBILL B ON A.FRCS_ID = B.FRCS_ID
		AND A.FEE_CODE = B.FEE_CODE
		GROUP BY A.MEM_ID, A.MEM_NAME, A.MEM_TEL, A.MEM_EMAIL, A.FEE_CODE, A.FRCS_ID, 
				 A.FEE_DDAY, A.FEE_TOTALPAY, A.FEE_STATUS, A.FEE_CHARGEDATE, A.FEE_PAYDATE,
				 A.FRCS_NAME, B.FRCS_AMT, B.FRCS_ROWAL,B.FRCS_NONPAYDATE,B.SETTLE_DATE, 
				 B.SETTLE_AT, B.FRCSBILL_OVERDUE, B.ORDER_AMT,B.TRAD_ADD , B.TRAD_REDCT
			) A
		)B
		<![CDATA[	
			WHERE B.RNUM >= #{startRow} AND B.RNUM <= #{endRow}
		]]>
	</select>
	
	<!-- 미납 발주내역 모달 리스트 -->
	<select id="selectModalOrderList" parameterType="storeOrderHistoryVO" resultType="storeOrderHistoryVO">
		SELECT TO_CHAR(FRCSORDER_NO) FRCSORDER_NO, TO_CHAR(FRCSORDER_DATE, 'YY/MM/DD') FRCSORDER_DATE, TO_CHAR(FRCSORDER_AMT) FRCSORDER_AMT, 
		FRCSORDER_CONFM, FRCSORDER_CONFMDATE, FRCSORDER_RETURN, FRCS_ID
		FROM FRCSORDER
		WHERE FRCS_ID = #{frcsId}
		AND FRCSORDER_CONFM = '승인'
		<![CDATA[	
			AND (FRCSORDER_DATE LIKE '%'||#{frcsNonpaydate}||'%')
		]]>
	</select>
	
	<select id="selectModalData" parameterType="storeOrderHistoryVO" resultType="storeOrderHistoryVO">
		SELECT TO_CHAR(FRCSORDER_NO) FRCSORDER_NO, TO_CHAR(FRCSORDER_DATE, 'YY/MM/DD') FRCSORDER_DATE, TO_CHAR(FRCSORDER_AMT) FRCSORDER_AMT, 
		FRCSORDER_CONFM, FRCSORDER_CONFMDATE, FRCSORDER_RETURN, FRCS_ID
		FROM FRCSORDER
		WHERE FRCS_ID = #{frcsId}
		AND FRCSORDER_CONFM = '승인'
		<![CDATA[	
			AND (FRCSORDER_DATE LIKE '%'||#{frcsNonpaydate}||'%')
		]]>
	</select>
</mapper>