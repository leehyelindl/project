<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.LoginMapper">

<resultMap type="memberVO" id="memberMap">
	<id property="memId" column="mem_id"/>
	<result property="memPw" column="mem_pw"/>
	<result property="memName" column="mem_name"/>
	<result property="memBir" column="mem_bir"/>
	<result property="memTel" column="mem_tel"/>
	<result property="memEmail" column="mem_email"/>
	<result property="memRescnt" column="mem_rescnt"/>
	<result property="memRevcnt" column="mem_revcnt"/>
	<result property="memGrade" column="mem_grade"/>
	<result property="memPost" column="mem_post"/>
	<result property="memAdd1" column="mem_add1"/>
	<result property="memAdd2" column="mem_add2"/>
	<result property="memRegdate" column="mem_regdate"/>
	<result property="enabled" column="enabled"/>
	<result property="ownerId" column="owner_id"/>
	<result property="frcsId" column="frcs_id"/>
	<result property="frcsName" column="frcs_name"/>
	<result property="frcsAdd1" column="frcs_add1"/>
	<result property="regCode" column="reg_code"/>
	<result property="add1" column="add1"/>
	<result property="add2" column="add2"/>
	<result property="add3" column="add3"/>
	<result property="nx" column="nx"/>
	<result property="ny" column="ny"/>
	<result property="secNy" column="sec_ny"/>
	<result property="secNx" column="sec_nx"/>
	<result property="baseDate" column="base_date"/>
	<collection property="authList" resultMap="memberAuthMap"/>
</resultMap>

<resultMap type="memberAuthVO" id="memberAuthMap">
	<result property="memId" column="mem_id"/>
	<result property="auth" column="auth"/>
</resultMap>

<!-- 아이디 중복 확인 -->
<select id="idCheck" parameterType="string" resultType="memberVO">
	select
		mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email, mem_rescnt, mem_revcnt, mem_post, mem_add1, mem_add2, mem_regdate
	from member
	where mem_id = #{memId}
</select>

<!-- 창업문의 일련번호 확인 -->
<select id="ownerIdCheck" parameterType="string" resultType="ownerVO">
	select
		owner_id, owner_no, owner_name, owner_bir, owner_tel, owner_email, owner_area, owner_dong, owner_money, owner_building, owner_buildingadd, owner_exp, owner_hopetime, owner_infocontent, owner_contentdetail, owner_const, owner_telyn, owner_yn, table_no, owner_rgdate
	from owner
	where owner_id = #{ownerId}
</select>

<!-- 가맹점 아이디 확인 -->
<select id="frcsIdCheck" parameterType="string" resultType="franchiseVO">
	select
		frcs_id, frcs_name, frcs_state, frcs_tel, frcs_stdate, frcs_enddate, frcs_post, frcs_add1, frcs_add2, frcs_sttime, frcs_endtime, frcs_cdate, frcs_insdate, frcs_inedate, frcs_opdate, frcs_xmap, frcs_ymap, frcs_star, frcs_psncpa
	from franchise
	where frcs_id = #{frcsId}
</select>

<!-- 회원가입 -->
<insert id="membercreate" parameterType="memberVO">
	insert into member (
		mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email, mem_rescnt, mem_revcnt, mem_grade, mem_post, mem_add1, mem_add2, mem_regdate, enabled
	) values (
		#{memId}, #{memPw}, #{memName}, #{memBir}, #{memTel}, #{memEmail}, 0, 0, #{memGrade}, #{memPost}, #{memAdd1}, #{memAdd2}, sysdate, '1'
	)
</insert>

<!-- 회원가입시 일반회원 역할 부여 -->
<insert id="signupmemberAuth" parameterType="string">
	insert into member_auth values( #{memId}, 'ROLE_MEMBER')
</insert>

<!-- 회원가입 -->
<insert id="ownercreate" parameterType="memberVO">
	insert into member (
		mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email, mem_rescnt, mem_revcnt, mem_post, mem_add1, mem_add2, mem_regdate, enabled
	) values (
		#{memId}, #{memPw}, #{memName}, #{memBir}, #{memTel}, #{memEmail}, 0, 0, #{memPost}, #{memAdd1}, #{memAdd2}, sysdate, '1'
	)
</insert>

<!-- 회원가입시 가맹점주 역할 부여 -->
<insert id="signupownerAuth" parameterType="string">
	insert into member_auth values( #{memId}, 'ROLE_OWNER')
</insert>

<!-- 회원가입시 가맹점주 역할 부여 -->
<insert id="createfrcsownerShip" parameterType="memberVO">
	insert into frcs_ownership (
		mem_id, frcs_id, owner_id
	) values ( 
		#{memId}, #{frcsId}, #{ownerId}
	)
</insert>

<!-- 로그인 기능 -->
<!-- <select id="loginCheck" parameterType="memberVO" resultType="memberVO"> -->
<!-- 	select -->
<!-- 		mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email, mem_rescnt, mem_revcnt, mem_post, mem_add1, mem_add2, mem_regdate -->
<!-- 	from member -->
<!-- 	where mem_id = #{memId} -->
<!-- 	and mem_pw = #{memPw} -->
<!-- </select> -->

<!-- 로그인 기능 -->
<!-- <select id="readByMemId" parameterType="string" resultMap="memberMap"> -->
<!-- 	select -->
<!-- 	    m.mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email,  -->
<!-- 	    mem_rescnt, mem_revcnt, mem_grade, mem_post, mem_add1, mem_add2,  -->
<!-- 	    mem_regdate, enabled, a.auth -->
<!-- 	from member m left outer join member_auth a on(m.mem_id = a.mem_id) -->
<!-- 	where m.mem_id = #{memId} -->
<!-- </select> -->

<select id="readByMemId" parameterType="string" resultMap="memberMap">
	select
	    a.mem_id, a.mem_pw, a.mem_name, a.mem_bir, a.mem_tel, a.mem_email,  a.mem_rescnt, a.mem_revcnt, a.mem_grade, a.mem_post, a.mem_add1, a.mem_add2,  a.mem_regdate, a.enabled, a.auth, b.frcs_id, b.frcs_name, b.frcs_add1, b.reg_code, b.add1, b.add2, b.add3, b.nx, b.ny, b.sec_ny, b.sec_nx, to_char(sysdate, 'yyyymmdd') base_date 
	from
	(select
	    m.mem_id, mem_pw, mem_name, mem_bir, mem_tel, mem_email, 
	    mem_rescnt, mem_revcnt, mem_grade, mem_post, mem_add1, mem_add2, 
	    mem_regdate, enabled, a.auth
	from member m left join member_auth a on (m.mem_id = a.mem_id)
	) a left join
	(
	select f.frcs_id, f.frcs_name, f.frcs_add1, w.*, o.mem_id
		from franchise f, weather w, frcs_ownership o
	where f.reg_code = w.reg_code
		and f.frcs_id = o.frcs_id
	) b on a.mem_id = b.mem_id
	where a.mem_id = #{memId}
</select>

<select id="findId" parameterType="String" resultType="memberVO">
	select 
   		mem_id
	from member
	where mem_name = #{memName} and mem_email = #{memEmail}
</select>

<select id="findPw" parameterType="String" resultType="memberVO">
	select 
   		mem_pw
	from member
	where mem_name = #{memName} and mem_email = #{memEmail} and mem_id = #{memId}
</select>

<select id="selectMember" parameterType="string" resultType="memberVO">
	select
	    mem_id, mem_pw, mem_name, to_char(mem_bir, 'YYMMDD') as mem_bir, mem_tel, mem_email, mem_rescnt, mem_revcnt, mem_post, mem_add1, mem_add2, mem_regdate
	from member
		where mem_id = #{memId}
</select>

<update id="memberUpdate" parameterType="memberVO">
	update member
	set
		mem_pw = #{memPw}, 
		mem_tel = #{memTel},
		mem_email = #{memEmail},
		mem_post = #{memPost},
		mem_add1 = #{memAdd1},
		mem_add2 = #{memAdd2}
	where mem_id = #{memId}
</update>

</mapper>